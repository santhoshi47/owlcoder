class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
    List<Integer> al=new ArrayList<>();
    List<List<Integer>> ans=new ArrayList<>();
        sum(candidates,0,target,al,ans);
        return ans;
    }
        static void sum(int[] arr,int i,int target,List<Integer> al,List<List<Integer>> ans)
        {
            if(i==arr.length)
            {
               if(target==0)
               ans.add(new ArrayList<>(al));
               return;
            }
            if(arr[i]<=target)
            {
            al.add(arr[i]);
            sum(arr,i,target-arr[i],al,ans);
            al.remove(al.size()-1);
            }
            sum(arr,i+1,target,al,ans);
        
        }
    }
